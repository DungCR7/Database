CREATE DATABASE BKC
USE BKC
CREATE TABLE ACCOUNT(
	ACCOUNT_ID INT PRIMARY KEY IDENTITY,
	ACCOUNT_NAME VARCHAR(50),
	ACCOUNT_PASSWORD VARCHAR(20),
	ACCOUNT_TYPE BIT
)
CREATE TABLE EMPLOYEE(
	EMPLOYEE_ID INT PRIMARY KEY IDENTITY,
	EMPLOYEE_NAME VARCHAR(50),
	GENDER VARCHAR(10),
	ADDRESS_EMPLOYEE VARCHAR(100),
	PHONE_NUMBER VARCHAR(20),
	ACCOUNT_ID INT FOREIGN KEY REFERENCES ACCOUNT(ACCOUNT_ID)
)
CREATE TABLE CATEGORY(
	CATEGORY_ID INT PRIMARY KEY IDENTITY,
	CATEGORY_NAME VARCHAR (50),
	DETAIL_CATEGORY VARCHAR(50),
	NOTES VARCHAR(50)
)
CREATE TABLE PRODUCT(
	PRODUCT_ID INT PRIMARY KEY IDENTITY, 
	PRODUCT_NAME VARCHAR (50),
	AMOUNT INT,
	PRICE FLOAT,
	EMPLOYEE_ID INT FOREIGN KEY REFERENCES EMPLOYEE(EMPLOYEE_ID),
	CATEGORY_ID INT FOREIGN KEY REFERENCES CATEGORY(CATEGORY_ID)
)
CREATE TABLE CUSTOMER(
	CUSTOMER_ID INT PRIMARY KEY IDENTITY,
	CUSTOMER_NAME VARCHAR(50),
	DATE_OF_BIRTH DATE,
	GENDER VARCHAR(10),
	ADDRESS_CUSTOMER VARCHAR(100),
	PHONE_NUMBER VARCHAR(20),
	EMAIL VARCHAR(30),
)
CREATE TABLE INVOICE(
	INVOICE_ID INT PRIMARY KEY IDENTITY,
	CUSTOMER_ID INT FOREIGN KEY REFERENCES CUSTOMER(CUSTOMER_ID),
	ORDER_DATE DATE,
	STATUS_INVOICE VARCHAR(10)
)
CREATE TABLE DETAILS_INVOICE(
	INVOICE_ID INT,
	PRODUCT_ID INT,
	PRIMARY KEY(INVOICE_ID,PRODUCT_ID),
	FOREIGN KEY(INVOICE_ID) REFERENCES INVOICE(INVOICE_ID),
	FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
	QUANTITY_PURCHASED INT,
	SALE_PRICE FLOAT
);
DROP TABLE ACCOUNT
SELECT * FROM ACCOUNT
SELECT * FROM EMPLOYEE
SELECT * FROM CATEGORY
SELECT * FROM PRODUCT
SELECT * FROM CUSTOMER
SELECT * FROM INVOICE
SELECT * FROM DETAILS_INVOICE
DELETE FROM CATEGORY
WHERE CATEGORY_ID = '1'
SELECT * FROM PRODUCT
SELECT * FROM CUSTOMER
SELECT * FROM INVOICE
SELECT * FROM DETAILS_INVOICE
INSERT INTO ACCOUNT VALUES('TAI KHOAN A','A123',1)
INSERT INTO ACCOUNT VALUES('TAI KHOAN B','B123',0)
INSERT INTO ACCOUNT VALUES('TAI KHOAN C','C123',1)

INSERT INTO EMPLOYEE VALUES ('NHAN VIEN A','NAM','HA NOI','0987654321',1) 
INSERT INTO EMPLOYEE VALUES ('NHAN VIEN B','NU','HA NOI','0987654322',3)
INSERT INTO EMPLOYEE VALUES ('NHAN VIEN C','NAM','HA NOI','0987654323',2)

INSERT INTO CATEGORY VALUES ('DANH MUC 1','LOAI KINH CAO CAP','GHI CHU 1')
INSERT INTO CATEGORY VALUES ('DANH MUC 2','LOAI KINH CUONG LUC','GHI CHU 2')
INSERT INTO CATEGORY VALUES ('DANH MUC 3','LOAI KINH DE VO','GHI CHU 3')

INSERT INTO PRODUCT VALUES('KINH CUONG LUC',10,3500000,1,1)
INSERT INTO PRODUCT VALUES('KINH CAO CAP',4,1200000,2,2)
INSERT INTO PRODUCT VALUES('KINH FULL HD KHONG CHE',4,20000000,1,3)

INSERT INTO CUSTOMER VALUES ('KHACH HANG A','1994-12-09','NAM','HA NOI','0988776655','KHA@GMAIL.COM')
INSERT INTO CUSTOMER VALUES ('KHACH HANG B','1995-02-07','NU','HAI PHONG','0987665544','KHB@GMAIL.COM')
INSERT INTO CUSTOMER VALUES ('KHACH HANG C','1994-01-01','NAM','HAI DUONG','0987654433','KHC@GMAIL.COM')

INSERT INTO INVOICE VALUES (1,'2021-05-20','OK')
INSERT INTO INVOICE VALUES (2,'2021-08-20', 'OK')
INSERT INTO INVOICE VALUES (3,'2021-07-25', 'OK')

INSERT INTO DETAILS_INVOICE VALUES ( 1,1,5,30000)
INSERT INTO DETAILS_INVOICE VALUES ( 3,2,2,80000)
INSERT INTO DETAILS_INVOICE VALUES ( 2,3,4,100000)

CREATE TRIGGER TRIGGER_SANPHAM
ON INVOICE
AFTER INSERT
AS
BEGIN
SELECT CUSTOMER.CUSTOMER_NAME,INVOICE.INVOICE_ID,INVOICE.CUSTOMER_ID,INVOICE.ORDER_DATE 
FROM INVOICE INNER JOIN CUSTOMER 
ON INVOICE.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID
END

INSERT INTO INVOICE VALUES (1,'2020-09-13',0)
DROP TRIGGER TRIGGER_SANPHAM

SELECT CUSTOMER.CUSTOMER_ID,CUSTOMER.CUSTOMER_NAME,
CUSTOMER.ADDRESS_CUSTOMER,CUSTOMER.PHONE_NUMBER,
INVOICE.INVOICE_ID,INVOICE.ORDER_DATE,INVOICE.STATUS_INVOICE 
FROM CUSTOMER INNER JOIN INVOICE 
ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID

SELECT * FROM INVOICE

CREATE VIEW VIEW_SAN_PHAM
AS SELECT PRODUCT_ID,PRODUCT_NAME,AMOUNT,PRICE FROM PRODUCT
SELECT * FROM VIEW_SAN_PHAM

DROP VIEW VIEW_SAN_PHAM

CREATE PROCEDURE HOA_DON_PROCEDURE AS
BEGIN
	SELECT INVOICE.INVOICE_ID,INVOICE.CUSTOMER_ID,DETAILS_INVOICE.PRODUCT_ID,
	DETAILS_INVOICE.QUANTITY_PURCHASED,DETAILS_INVOICE.SALE_PRICE,
	INVOICE.ORDER_DATE,INVOICE.STATUS_INVOICE
	FROM INVOICE INNER JOIN DETAILS_INVOICE
	ON INVOICE.INVOICE_ID = DETAILS_INVOICE.INVOICE_ID
END
EXECUTE HOA_DON_PROCEDURE
DROP PROCEDURE HOA_DON_PROCEDURE


CREATE PROCEDURE DANH_MUC_SAN_PHAM AS
BEGIN	
	SELECT CATEGORY.CATEGORY_NAME,CATEGORY.DETAIL_CATEGORY,PRODUCT.PRODUCT_NAME,PRODUCT.AMOUNT,PRODUCT.PRICE 
	FROM CATEGORY INNER JOIN PRODUCT
	ON CATEGORY.CATEGORY_ID = PRODUCT.CATEGORY_ID
END
EXECUTE DANH_MUC_SAN_PHAM
DROP PROCEDURE DANH_MUC_SAN_PHAM

SELECT * FROM PRODUCT
CREATE TRIGGER TRIGGER_XOA_MA_SAN_PHAM
ON PRODUCT
AFTER DELETE
AS
BEGIN
	SELECT PRODUCT.PRODUCT_ID,PRODUCT.PRODUCT_NAME,PRODUCT.AMOUNT,PRODUCT.PRICE
	FROM PRODUCT
END

DELETE FROM PRODUCT WHERE AMOUNT >5
DROP TRIGGER TRIGGER_XOA_MA_SAN_PHAM

CREATE TRIGGER TRIGGER_INSTEAD_OF
ON PRODUCT
INSTEAD OF DELETE
AS
BEGIN	
	DELETE FROM DETAILS_INVOICE WHERE INVOICE_ID = 1
END
DELETE FROM INVOICE WHERE INVOICE_ID = 1
DROP TRIGGER TRIGGER_INSTEAD_OF

CREATE FUNCTION FUNCTION_HOA_DON (@PRICE INT)
RETURNS VARCHAR(50)
AS
BEGIN
	RETURN ( SELECT TOP 1 PRODUCT_NAME FROM PRODUCT
	WHERE PRICE = @PRICE ORDER BY PRODUCT_NAME DESC)
END
PRINT .dbo.FUNCTION_HOA_DON (20000000)
SELECT .dbo.FUNCTION_HOA_DON (20000000)
SELECT * FROM PRODUCT
DROP FUNCTION FUNCTION_HOA_DON

CREATE FUNCTION INLINE_TABLE (@AMOUNT INT)
RETURNS TABLE
AS
RETURN (SELECT INVOICE.INVOICE_ID,CUSTOMER.CUSTOMER_ID,
			   INVOICE.ORDER_DATE,INVOICE.STATUS_INVOICE
		FROM   INVOICE INNER JOIN CUSTOMER 
		ON     INVOICE.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID);
SELECT * FROM INLINE_TABLE (200000)
DROP FUNCTION INLINE_TABLE

DECLARE @PRICE INT;
SET @PRICE = 3500000;
SELECT PRODUCT.PRODUCT_ID,PRODUCT.PRODUCT_NAME,
	   PRODUCT.AMOUNT,PRODUCT.PRICE
FROM PRODUCT WHERE PRICE = @PRICE
SELECT * FROM PRODUCT
